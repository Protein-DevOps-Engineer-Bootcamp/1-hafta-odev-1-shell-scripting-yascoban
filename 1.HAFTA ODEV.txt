1.Odev: Yedekleme Odevi


1. Adım 
ilkönce nano odev.sh diyerek bir sh dosyası oluşturduk ve içine scriptimizi yazdık.

#!/bin/bash
for dizin  in $(ls /home)
do
        tar -zcvf /mnt/${dizin}_$(date +%d%m%Y_%H%M).tar.gz /home/${dizin}
        md5sum /mnt/${dizin}_$(date +%d%m%Y_%H%M).tar.gz  | cut -d ' ' -f1  > /mnt/${dizin}_$(date +%d%m%Y_%H%M).tar.gz.md5.txt
        echo $(date +%d%m%Y_%H%M) > /tmp/son.log
done

2. Adım 
sh dosyamıza chmod ile çalışma yetkisi verdik.

3. Adım
Her gÜN 23:05 de çalışması için crontab ile job oluşturduk.

5 23 * * * odev.sh

örnek çıktı:

yedek adı =yasin_29052022_1536.tar.gz
md5 dosya adı=yasin_29052022_1536.tar.gz.md5.txt
son çalışma saati=tmp/son.log

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2.Odev: Alarm Odevi: 
Bir script yazin :D bu script GNU/Linux sunucunuzun uzerinde dakika’da bir calissin 
ve makinadaki herhangi bir diskin yada partition'in kullanim orani %90’in uzerinde ise mail atsin.


İlk adım olarak ssmtp: Authorization failed hatası ile karşılaşmamak adına Gmail ayarlarını yapmalısınız.
Daha sonra Mail atabilmek için sSMTP programını kuruyoruz.

-sudo apt-get install ssmtp

Sonrasında /etc/ssmtp/ssmtp.conf dosyasını sudo ile açıp aşağıdaki şekilde düzenliyoruz. 
İlk satırda ilgili yere gmail adresinizi, ikinci satıra uygulama şifresini yazıyorsunuz. Gerisi olduğu gibi kalıyor.

AuthUser=........@gmail.com
AuthPass=........
FromLineOverride=YES
mailhub=smtp.gmail.com:587
UseSTARTTLS=YES


Sonrasında mail senkronizasyonu başarılı oldu mu diye kontrolleri sağlıyoruz.

echo "Testing...1...2...3" | ssmtp yyasincoban@gmail.com

Artık mail atabildiğimize göre nano depo.sh diyerek bir sh dosyası oluşturuyoruz ve içine scriptimizi yazıyoruz.

#!/bin/bash
THRESHOLD=90
EMAIL=yyasincoban@gmail.com
PART=/boot
USE=`df -h |grep $PART | awk '{ print $5 }' | cut -d'%' -f1`
if [ $USE -gt $THRESHOLD ]; then
  echo "KUllanılan yüzde: $USE" | mail -s "Disk Kullanım " -r yyasincoban@gmail.com $EMAIL
fi

2.adım

sh dosyamıza chmod ile çalışma yetkisi verdik.

3.Her dakika  çalışması için crontab ile job oluşturduk.

* * * * * odev.sh



